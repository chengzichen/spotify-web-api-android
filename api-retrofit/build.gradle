apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

project.group = GROUP
version = VERSION_NAME

dependencies {
    api project(':api-core')
    api 'com.squareup.retrofit:retrofit:1.9.0'

    testImplementation("org.robolectric:robolectric:${ROBOLECTRIC_VERSION}") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation "com.google.guava:guava:${GUAVA_VERSION}"
    testImplementation "junit:junit:${JUNIT_VERSION}"
    testImplementation "org.easytesting:fest-assert-core:${FEST_ASSERT_CORE_VERSION}"
    testImplementation "org.mockito:mockito-core:${MOCKITO_CORE_VERSION}"

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.squareup.okhttp:okhttp:2.7.5'
}

apply from: rootProject.file('release.gradle')

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

android.testOptions.unitTests.all {
    // Configure includes / excludes
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    maxHeapSize = '2048m'
    jvmArgs '-XX:MaxPermSize=512m', '-XX:-UseSplitVerifier'
    maxParallelForks = 4
    forkEvery = 150

    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}


